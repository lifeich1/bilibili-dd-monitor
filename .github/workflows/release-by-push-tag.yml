name: release-by-push-tag

on:
  push:
    tags:
      - v*.*.*

jobs:
  release:
    name: build and release electron app

    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ macos-latest, ubuntu-latest, windows-latest ]

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v2.3.4

      - name: Setup Node.js environment
        uses: actions/setup-node@v2.1.3
        with:
          node-version: 14

      - name: npm install
        run: |
          npm install

      - name: build windows app
        if: matrix.os == 'windows-latest'
        run: |
          npm run electron:build-win
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: build mac app
        if: matrix.os == 'macos-latest'
        run: |
          npm run electron:build-mac
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: build linux app
        if: matrix.os == 'ubuntu-latest'
        run: |
          npm run electron:build-linux
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # cleanup needless artifacts in dist_electron
      - name: cleanup artifacts for linux
        if: matrix.os == 'ubuntu-latest'
        run: |
          npx rimraf "dist_electron/!(*.AppImage|*.yml)"

      - name: cleanup artifacts for macos
        if: matrix.os == 'macos-latest'
        run: |
          npx rimraf "dist_electron/!(*.dmg|*.zip|*.dmg.blockmap|*.yml)"

      - name: cleanup artifacts for windows
        if: matrix.os == 'windows-latest'
        # windows batch script 难用到令人发指 连一个OR逻辑判断都是伪实现，积重难返
        # for %f in (*) do if not %~xf==.txt or .exe del "%f"

        # for %f in (*) do if not %~xf==.exe del "%f"
        # TODO npx rimraf "dist_electron/!(*.exe|*.exe.blockmap|*.yml)"
#        run: |
#          npx rimraf "dist_electron/!(*.exe)"
        run: echo "keep all assets on Windows OS."

      # create release
      - name: release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          prerelease: true
          # don't turn on fail_on_unmatched_files
          fail_on_unmatched_files: false
#          files: "dist_electron/**"
#          dist_electron/(*.AppImage|*.dmg|*.zip|*.dmg.blockmap|*.exe|*.exe.blockmap|*.yml)
          files: |
            dist_electron/*.AppImage
            dist_electron/*.dmg
            dist_electron/*.zip
            dist_electron/*.dmg.blockmap
            dist_electron/*.exe
            dist_electron/*.exe.blockmap
            dist_electron/*.yml
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
